{"version":3,"sources":["play.js"],"names":["console","log","turnPlarer","document","getElementById","player","optionmsg","playerChange","textContent","drawPeace","judgeX","judgeY","ctx","canvas2","getContext","x","a","y","b","r","Math","PI","fillStyle","beginPath","i","j","fill","returnStones","innerStones","judge","ia","peaces","n","c","jb","concat","push","element","forEach","peacePraceReturn","arc","winnerCheck","winnerJudgeCheckFinish","winnerJudge","winnerCheckFinish","addEventListener","e","layerX","layerY"],"mappings":"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","file":"play.min.js","sourcesContent":["// import canvas1 from \"./script/canvas1\";\n// import canvas2 from \"./script/canvas2\";\n// const canvas1 = document.getElementById(\"canvas1\");\n// const canvas2 = document.getElementById(\"canvas2\");\n// let { width, height } = canvas1; // canvasのwidthとheightを取得\n// let a = width / 8; // 1マスの一辺の長さ\nconsole.log(\"b\");\nlet turnPlarer = 1; //出番の初期化（黒の番から始まる）\nlet player = document.getElementById(\"turn-player\");\nplayer.textContent = \"黒のターンです\";\nlet optionmsg = document.getElementById(\"error-msg\");\n// console.log(optionmsg);\n\nfunction playerChange(turnPlarer) {\n  if (turnPlarer === 1) {\n    player.textContent = \"黒のターンです\";\n  } else if (turnPlarer === -1) {\n    player.textContent = \"白のターンです\";\n  }\n}\n\ncanvas2.addEventListener(\"click\", function (e) {\n  console.log(turnPlarer);\n  let judge = false;\n  for (let i = 0; i < 8; i++) {\n    console.log(`iは${i}`);\n    for (let j = 0; j < 8; j++) {\n      let judgeX = a * j;\n      let judgeY = a * i;\n      console.log(`jは${j}`);\n\n      if (judgeX < e.layerX && judgeX + a > e.layerX) {\n        console.log(`X軸は${e.layerX}の位置をクリックしました`);\n        if (judgeY < e.layerY && judgeY + b > e.layerY) {\n          console.log(`Y軸は${e.layerY}の位置をクリックしました`);\n          if (peaces[i][j] !== 0) {\n            console.log(`クリック位置[${i},${j}]には既に石があります`);\n            return;\n          }\n          console.log(judgeX, \" \", judgeY);\n          judge = true;\n          console.log(judgeX, \"< おいた石 <\", judgeX + a);\n          console.log(judgeY, \"< おいた石 <\", judgeY + b);\n          // console.log(`${judgeX} ${judgeY}`);\n          // if (turnPlarer === 1) {\n          //   peaces[i][j] = 1;\n          // } else if (turnPlarer === -1) {\n          //   peaces[i][j] = -1;\n          // }\n          turnStone(i, j, judgeX, judgeY);\n          // console.log(peaces);\n          // console.log(turnPlarer);\n          // drawPeace(judgeX, judgeY, i, j, turnPlarer);\n\n          // break;\n        }\n      } else {\n        continue;\n      }\n    }\n    if (judge) break;\n  }\n});\n\nfunction drawPeace(judgeX, judgeY, turnPlarer) {\n  // console.log(i, j);\n\n  let ctx = canvas2.getContext(\"2d\");\n  let x = judgeX + a / 2; //X軸\n  let y = judgeY + b / 2; //Y軸\n  let r = a * 0.4; // 半径\n  console.log(x, \" \", y);\n  ctx.beginPath(); // パスのリセット\n  ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n  if (turnPlarer === 1) {\n    ctx.fillStyle = \"black\"; // 塗る色を黒に\n  } else if (turnPlarer === -1) {\n    ctx.fillStyle = \"white\"; // 塗る色を白に\n  }\n\n  ctx.fill(); // 塗る\n  // turnStone(i, j);\n}\n\nfunction turnStone(i, j, judgeX, judgeY) {\n  let c = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n  console.log(turnPlarer);\n  let returnStones = [];\n  let innerStones = [];\n  let judge = 0;\n  let ia = 0;\n  let jb = 0;\n  console.log(peaces[i][j]);\n  if (turnPlarer === 1) {\n    judge = -1;\n  } else if (turnPlarer === -1) {\n    judge = 1;\n  }\n  for (let n = 0; n < 8; n++) {\n    ia = i + c[n][0];\n    jb = j + c[n][1];\n    console.log(ia, \" \", jb);\n    if (ia < 0 || jb < 0 || ia > 7 || jb > 7) {\n      console.log(ia, \" \", jb, \" この座標はありません。\");\n      continue;\n    } else {\n      if (peaces[ia][jb] === 0) {\n        // peacePraceReturn(c[0]);\n        console.log(turnPlarer);\n        console.log(`座標[${ia},${jb}]は空です。`);\n      } else if (peaces[ia][jb] === judge) {\n        console.log(ia, \" \", jb, \"石の色が違います。\");\n\n        do {\n          innerStones.push([ia, jb]);\n          console.log(ia, \" \", jb);\n          ia += c[n][0];\n          jb += c[n][1];\n          if (ia < 0 || jb < 0 || ia > 7 || jb > 7) {\n            console.log(ia, \" \", jb, \" この座標はありません。\");\n            return;\n          }\n        } while (peaces[ia][jb] === judge);\n        console.log(innerStones);\n        if (peaces[ia][jb] === 0) {\n          innerStones = [];\n        } else if (peaces[ia][jb] !== judge) {\n          innerStones.forEach((element) => {\n            returnStones.push(element);\n          });\n          innerStones = [];\n        }\n        // returnStones = [];\n\n        continue;\n      } else {\n        console.log(\"石色が同じです。\");\n      }\n    }\n  }\n\n  returnStones.forEach((element) => {\n    console.log(element[0], \" \", element[1]);\n    if (peaces[element[0]][element[1]] === 1) {\n      console.log(peaces);\n      peaces[element[0]][element[1]] = -1;\n      console.log(\n        element[0],\n        \" \",\n        element[1],\n        \" \",\n        peaces[element[0]][element[1]]\n      );\n    } else if (peaces[element[0]][element[1]] === -1) {\n      console.log(peaces[element[0]][element[1]]);\n      console.log(\n        element[0],\n        \" \",\n        element[1],\n        \" \",\n        peaces[element[0]][element[1]]\n      );\n      peaces[element[0]][element[1]] = 1;\n    }\n  });\n  if (turnPlarer === 1) {\n    peaces[i][j] = 1;\n  } else if (turnPlarer === -1) {\n    peaces[i][j] = -1;\n  }\n  console.log(peaces);\n  drawPeace(judgeX, judgeY, turnPlarer);\n  turnPlarer = judge;\n  console.log(\"次は\", turnPlarer, \"の番です。\");\n  peacePraceReturn(returnStones);\n  console.log(turnPlarer);\n\n  returnStones = [];\n}\n\nfunction peacePraceReturn(returnStones) {\n  console.log(peaces);\n\n  returnStones.forEach((element) => {\n    console.log(\n      element[0],\n      \" \",\n      element[1],\n      \" \",\n      peaces[element[0]][element[1]]\n    );\n    let judgeX = a * element[1];\n    let judgeY = a * element[0];\n    let ctx = canvas2.getContext(\"2d\");\n    let x = judgeX + a / 2; //X軸\n    let y = judgeY + b / 2; //Y軸\n    let r = a * 0.4; // 半径\n    // console.log(x, \" \", y);\n    ctx.beginPath(); // パスのリセット\n    ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n    if (peaces[element[0]][element[1]] === 1) {\n      ctx.fillStyle = \"black\"; // 塗る色を黒に\n    } else if (peaces[element[0]][element[1]] === -1) {\n      ctx.fillStyle = \"white\";\n    }\n    ctx.fill(); // 塗る\n    winnerCheck();\n    // turnStone(element[0], element[1]);\n  });\n}\n\nfunction winnerCheck() {\n  // console.log(turnPlarer);\n  let winnerJudge = 0;\n  winnerJudgeCheckFinish: for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (peaces[i][j] === 1) {\n        winnerJudge = 1;\n        break winnerJudgeCheckFinish;\n      } else if (peaces[i][j] === -1) {\n        winnerJudge = -1;\n        break winnerJudgeCheckFinish;\n      }\n    }\n  }\n  winnerCheckFinish: for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (peaces[i][j] !== winnerJudge && peaces[i][j] !== 0) {\n        console.log(i, \" \", j, \"石が埋まっていませんゲームを続行してください\");\n        winnerJudge = 0;\n        break winnerCheckFinish;\n      }\n    }\n  }\n  if (winnerJudge !== 0) {\n    console.log(\"石が全て\", winnerJudge, \"で埋まりました。\");\n  }\n}\n"]}