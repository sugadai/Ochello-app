{"version":3,"sources":["play.js"],"names":["turnPlarer","plaer","document","getElementById","optionmsg","console","playerChange","textContent","drawPeace","judgeX","judgeY","i","j","ctx","canvas2","getContext","x","a","y","judge","b","r","log","beginPath","arc","Math","fillStyle","turnStone","c","fill","returnStones","ia","peaces","n","jb","hasOwnProperty","concat","push","element","peacePraceReturn","forEach","PI","winnerCheck","winnerJudgeCheckFinish","winnerJudge","winnerCheckFinish","e","addEventListener","layerX","layerY"],"mappings":"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","file":"play.min.js","sourcesContent":["// import canvas1 from \"./script/canvas1\";\n// import canvas2 from \"./script/canvas2\";\n// const canvas1 = document.getElementById(\"canvas1\");\n// const canvas2 = document.getElementById(\"canvas2\");\n// let { width, height } = canvas1; // canvasのwidthとheightを取得\n// let a = width / 8; // 1マスの一辺の長さ\nlet turnPlarer = 1; //出番の初期化（黒の番から始まる）\nlet plaer = document.getElementById(\"turn-player\");\nplaer.textContent = \"黒のターンです\";\nlet optionmsg = document.getElementById(\"error-msg\");\nconsole.log(optionmsg);\n\nfunction playerChange(turnPlarer) {\n  let plaer = document.getElementById(\"turn-player\");\n  if (turnPlarer === 1) {\n    plaer.textContent = \"黒のターンです\";\n  } else if (turnPlarer === -1) {\n    plaer.textContent = \"白のターンです\";\n  }\n}\n\ncanvas2.addEventListener(\"click\", function (e) {\n  // console.log(e.layerX + \" \", e.layerY);\n  let judge = false;\n  for (let i = 0; i < 8; i++) {\n    console.log(`iは${i}`);\n    for (let j = 0; j < 8; j++) {\n      let judgeX = a * j;\n      let judgeY = a * i;\n      console.log(`jは${j}`);\n\n      if (judgeX < e.layerX && judgeX + a > e.layerX) {\n        console.log(`X軸は${e.layerX}の位置をクリックしました`);\n        if (judgeY < e.layerY && judgeY + b > e.layerY) {\n          console.log(`Y軸は${e.layerY}の位置をクリックしました`);\n          if (peaces[i][j] !== 0) {\n            console.log(`クリック位置[${i},${j}]には既に石があります`);\n            return;\n          }\n          console.log(i, j);\n          judge = true;\n          console.log(judgeX, \"< おいた石 <\", judgeX + a);\n          console.log(judgeY, \"< おいた石 <\", judgeY + b);\n          // console.log(`${judgeX} ${judgeY}`);\n          if (turnPlarer === 1) {\n            peaces[i][j] = 1;\n          } else if (turnPlarer === -1) {\n            peaces[i][j] = -1;\n          }\n\n          console.log(peaces);\n          console.log(turnPlarer);\n          drawPeace(judgeX, judgeY, i, j, turnPlarer);\n\n          break;\n        }\n      } else {\n        continue;\n      }\n    }\n    if (judge) break;\n  }\n});\n\nfunction drawPeace(judgeX, judgeY, i, j, turnPlarer) {\n  // console.log(i, j);\n\n  let ctx = canvas2.getContext(\"2d\");\n  let x = judgeX + a / 2; //X軸\n  let y = judgeY + b / 2; //Y軸\n  let r = a * 0.4; // 半径\n  console.log(x, \" \", y);\n  ctx.beginPath(); // パスのリセット\n  ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n  if (turnPlarer === 1) {\n    ctx.fillStyle = \"black\"; // 塗る色を黒に\n  } else if (turnPlarer === -1) {\n    ctx.fillStyle = \"white\"; // 塗る色を白に\n  }\n\n  ctx.fill(); // 塗る\n  turnStone(i, j);\n}\n\nfunction turnStone(i, j) {\n  // console.log(i, j);\n  let c = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n\n  let returnStones = [];\n  let judge = 0;\n  let ia = 0;\n  let jb = 0;\n  console.log(peaces[i][j]);\n  if (peaces[i][j] === 1) {\n    judge = -1;\n  } else if (peaces[i][j] === -1) {\n    judge = 1;\n  }\n  for (let n = 0; n < 8; n++) {\n    ia = i + c[n][0];\n    jb = j + c[n][1];\n    console.log(ia, \" \", jb);\n    if (peaces.hasOwnProperty(ia, jb) === false) {\n      console.log(ia, \" \", jb, \" この座標はありません。\");\n      continue;\n    } else {\n      if (peaces[ia][jb] === 0) {\n        // peacePraceReturn(c[0]);\n        console.log(`座標[${ia},${jb}]は空です。`);\n      } else if (peaces[ia][jb] === judge) {\n        console.log(ia, \" \", jb, \"石の色が違います。\");\n\n        do {\n          returnStones.push([ia, jb]);\n          console.log(ia, \" \", jb);\n          ia += c[n][0];\n          jb += c[n][1];\n          if (peaces.hasOwnProperty(ia, jb) === false) {\n            console.log(ia, \" \", jb, \" この座標はありません。\");\n            return;\n          }\n        } while (peaces[ia][jb] === judge);\n        console.log(returnStones);\n        if (peaces[ia][jb] === 0) {\n          returnStones = [];\n          console.log(returnStones);\n        } else if (peaces[ia][jb] !== judge) {\n          console.log(ia, \" \", jb, \" \", peaces[ia][jb]);\n          // if (judge === 1) {\n          //   turnPlarer = -1;\n          // } else if (judge === 1) {\n          //   turnPlarer = -1;\n          // }\n          turnPlarer = judge;\n          playerChange(turnPlarer);\n          console.log(\"次は\", turnPlarer, \"の番です。\");\n          returnStones.forEach((element) => {\n            console.log(element[0], \" \", element[1]);\n            if (peaces[element[0]][element[1]] === 1) {\n              peaces[element[0]][element[1]] = -1;\n              console.log(\n                element[0],\n                \" \",\n                element[1],\n                \" \",\n                peaces[element[0]][element[1]]\n              );\n            } else if (peaces[element[0]][element[1]] === -1) {\n              console.log(peaces[element[0]][element[1]]);\n              console.log(\n                element[0],\n                \" \",\n                element[1],\n                \" \",\n                peaces[element[0]][element[1]]\n              );\n              peaces[element[0]][element[1]] = 1;\n            }\n          });\n\n          console.log(peaces);\n          peacePraceReturn(returnStones);\n          returnStones = [];\n        }\n\n        continue;\n      } else {\n        console.log(\"石色が同じです。\");\n      }\n    }\n  }\n}\n\nfunction peacePraceReturn(returnStones) {\n  returnStones.forEach((element) => {\n    console.log(\n      element[0],\n      \" \",\n      element[1],\n      \" \",\n      peaces[element[0]][element[1]]\n    );\n    let judgeX = a * element[1];\n    let judgeY = a * element[0];\n    let ctx = canvas2.getContext(\"2d\");\n    let x = judgeX + a / 2; //X軸\n    let y = judgeY + b / 2; //Y軸\n    let r = a * 0.4; // 半径\n    // console.log(x, \" \", y);\n    ctx.beginPath(); // パスのリセット\n    ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n    if (peaces[element[0]][element[1]] === 1) {\n      ctx.fillStyle = \"black\"; // 塗る色を黒に\n    } else if (peaces[element[0]][element[1]] === -1) {\n      ctx.fillStyle = \"white\";\n    }\n    ctx.fill(); // 塗る\n    console.log(peaces);\n    winnerCheck();\n    // turnStone(element[0], element[1]);\n  });\n}\n\nfunction winnerCheck() {\n  let winnerJudge = 0;\n  winnerJudgeCheckFinish: for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (peaces[i][j] === 1) {\n        winnerJudge = 1;\n        break winnerJudgeCheckFinish;\n      } else if (peaces[i][j] === -1) {\n        winnerJudge = -1;\n        break winnerJudgeCheckFinish;\n      }\n    }\n  }\n  console.log(winnerJudge);\n  winnerCheckFinish: for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (peaces[i][j] !== winnerJudge && peaces[i][j] !== 0) {\n        console.log(i, \" \", j, \"石が埋まっていませんゲームを続行してください\");\n        winnerJudge = 0;\n        break winnerCheckFinish;\n      }\n    }\n  }\n  if (winnerJudge !== 0) {\n    console.log(\"石が全て\", winnerJudge, \"で埋まりました。\");\n  }\n}\n"]}