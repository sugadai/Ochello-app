{"version":3,"sources":["play.js"],"names":["turnPlarer","plaer","document","getElementById","optionmsg","console","playerChange","textContent","drawPeace","judgeX","judgeY","ctx","canvas2","getContext","x","a","y","judge","b","r","log","beginPath","arc","Math","fillStyle","turnStone","i","j","fill","returnStones","c","peaces","ia","n","jb","push","element","peacePraceReturn","forEach","PI","winnerCheck","winnerJudge","winnerJudgeCheckFinish","winnerCheckFinish","e","addEventListener","concat","layerX","layerY"],"mappings":"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","file":"play.min.js","sourcesContent":["// import canvas1 from \"./script/canvas1\";\n// import canvas2 from \"./script/canvas2\";\n// const canvas1 = document.getElementById(\"canvas1\");\n// const canvas2 = document.getElementById(\"canvas2\");\n// let { width, height } = canvas1; // canvasのwidthとheightを取得\n// let a = width / 8; // 1マスの一辺の長さ\nlet turnPlarer = 1; //出番の初期化（黒の番から始まる）\nlet plaer = document.getElementById(\"turn-player\");\nplaer.textContent = \"黒のターンです\";\nlet optionmsg = document.getElementById(\"error-msg\");\nconsole.log(optionmsg);\n\nfunction playerChange(turnPlarer) {\n  let plaer = document.getElementById(\"turn-player\");\n  if (turnPlarer === 1) {\n    plaer.textContent = \"黒のターンです\";\n  } else if (turnPlarer === -1) {\n    plaer.textContent = \"白のターンです\";\n  }\n}\n\ncanvas2.addEventListener(\"click\", function (e) {\n  console.log(turnPlarer);\n  let judge = false;\n  for (let i = 0; i < 8; i++) {\n    console.log(`iは${i}`);\n    for (let j = 0; j < 8; j++) {\n      let judgeX = a * j;\n      let judgeY = a * i;\n      console.log(`jは${j}`);\n\n      if (judgeX < e.layerX && judgeX + a > e.layerX) {\n        console.log(`X軸は${e.layerX}の位置をクリックしました`);\n        if (judgeY < e.layerY && judgeY + b > e.layerY) {\n          console.log(`Y軸は${e.layerY}の位置をクリックしました`);\n          if (peaces[i][j] !== 0) {\n            console.log(`クリック位置[${i},${j}]には既に石があります`);\n            return;\n          }\n          console.log(judgeX, \" \", judgeY);\n          judge = true;\n          console.log(judgeX, \"< おいた石 <\", judgeX + a);\n          console.log(judgeY, \"< おいた石 <\", judgeY + b);\n          // console.log(`${judgeX} ${judgeY}`);\n          // if (turnPlarer === 1) {\n          //   peaces[i][j] = 1;\n          // } else if (turnPlarer === -1) {\n          //   peaces[i][j] = -1;\n          // }\n          turnStone(i, j, judgeX, judgeY, turnPlarer);\n          // console.log(peaces);\n          // console.log(turnPlarer);\n          // drawPeace(judgeX, judgeY, i, j, turnPlarer);\n\n          break;\n        }\n      } else {\n        continue;\n      }\n    }\n    if (judge) break;\n  }\n});\n\nfunction drawPeace(judgeX, judgeY, turnPlarer) {\n  // console.log(i, j);\n\n  let ctx = canvas2.getContext(\"2d\");\n  let x = judgeX + a / 2; //X軸\n  let y = judgeY + b / 2; //Y軸\n  let r = a * 0.4; // 半径\n  console.log(x, \" \", y);\n  ctx.beginPath(); // パスのリセット\n  ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n  if (turnPlarer === 1) {\n    ctx.fillStyle = \"black\"; // 塗る色を黒に\n  } else if (turnPlarer === -1) {\n    ctx.fillStyle = \"white\"; // 塗る色を白に\n  }\n\n  ctx.fill(); // 塗る\n  // turnStone(i, j);\n}\n\nfunction turnStone(i, j, judgeX, judgeY, turnPlarer) {\n  let c = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n\n  let returnStones = [];\n  let judge = 0;\n  let ia = 0;\n  let jb = 0;\n  console.log(peaces[i][j]);\n  if (turnPlarer === 1) {\n    judge = -1;\n  } else if (turnPlarer === -1) {\n    judge = 1;\n  }\n  for (let n = 0; n < 8; n++) {\n    ia = i + c[n][0];\n    jb = j + c[n][1];\n    console.log(ia, \" \", jb);\n    if (ia < 0 || jb < 0 || ia > 7 || jb > 7) {\n      console.log(ia, \" \", jb, \" この座標はありません。\");\n      continue;\n    } else {\n      if (peaces[ia][jb] === 0) {\n        // peacePraceReturn(c[0]);\n        console.log(`座標[${ia},${jb}]は空です。`);\n      } else if (peaces[ia][jb] === judge) {\n        console.log(ia, \" \", jb, \"石の色が違います。\");\n\n        do {\n          returnStones.push([ia, jb]);\n          console.log(ia, \" \", jb);\n          ia += c[n][0];\n          jb += c[n][1];\n          if (ia < 0 || jb < 0 || ia > 7 || jb > 7) {\n            console.log(ia, \" \", jb, \" この座標はありません。\");\n            return;\n          }\n        } while (peaces[ia][jb] === judge);\n        console.log(returnStones);\n        if (peaces[ia][jb] === 0) {\n          returnStones = [];\n          console.log(returnStones);\n        } else if (peaces[ia][jb] !== judge) {\n          console.log(ia, \" \", jb, \" \", peaces[ia][jb]);\n          // if (judge === 1) {\n          //   turnPlarer = -1;\n          // } else if (judge === 1) {\n          //   turnPlarer = -1;\n          // }\n\n          returnStones.forEach((element) => {\n            console.log(element[0], \" \", element[1]);\n            if (peaces[element[0]][element[1]] === 1) {\n              peaces[element[0]][element[1]] = -1;\n              console.log(\n                element[0],\n                \" \",\n                element[1],\n                \" \",\n                peaces[element[0]][element[1]]\n              );\n            } else if (peaces[element[0]][element[1]] === -1) {\n              console.log(peaces[element[0]][element[1]]);\n              console.log(\n                element[0],\n                \" \",\n                element[1],\n                \" \",\n                peaces[element[0]][element[1]]\n              );\n              peaces[element[0]][element[1]] = 1;\n            }\n          });\n          if (turnPlarer === 1) {\n            peaces[i][j] = 1;\n          } else if (turnPlarer === -1) {\n            peaces[i][j] = -1;\n          }\n          console.log(\"a\");\n          drawPeace(judgeX, judgeY, turnPlarer);\n          turnPlarer = judge;\n          playerChange(turnPlarer);\n          console.log(\"次は\", turnPlarer, \"の番です。\");\n          console.log(turnPlarer);\n          peacePraceReturn(returnStones, turnPlarer);\n          returnStones = [];\n        }\n\n        continue;\n      } else {\n        console.log(\"石色が同じです。\");\n      }\n    }\n  }\n}\n\nfunction peacePraceReturn(returnStones, turnPlarer) {\n  console.log(turnPlarer);\n  returnStones.forEach((element) => {\n    // console.log(\n    //   element[0],\n    //   \" \",\n    //   element[1],\n    //   \" \",\n    //   peaces[element[0]][element[1]]\n    // );\n    let judgeX = a * element[1];\n    let judgeY = a * element[0];\n    let ctx = canvas2.getContext(\"2d\");\n    let x = judgeX + a / 2; //X軸\n    let y = judgeY + b / 2; //Y軸\n    let r = a * 0.4; // 半径\n    // console.log(x, \" \", y);\n    ctx.beginPath(); // パスのリセット\n    ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n    if (peaces[element[0]][element[1]] === 1) {\n      ctx.fillStyle = \"black\"; // 塗る色を黒に\n    } else if (peaces[element[0]][element[1]] === -1) {\n      ctx.fillStyle = \"white\";\n    }\n    ctx.fill(); // 塗る\n    console.log(turnPlarer);\n    winnerCheck(turnPlarer);\n    // turnStone(element[0], element[1]);\n  });\n}\n\nfunction winnerCheck(turnPlarer) {\n  console.log(turnPlarer);\n  let winnerJudge = 0;\n  winnerJudgeCheckFinish: for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (peaces[i][j] === 1) {\n        winnerJudge = 1;\n        break winnerJudgeCheckFinish;\n      } else if (peaces[i][j] === -1) {\n        winnerJudge = -1;\n        break winnerJudgeCheckFinish;\n      }\n    }\n  }\n  // console.log(winnerJudge);\n  winnerCheckFinish: for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (peaces[i][j] !== winnerJudge && peaces[i][j] !== 0) {\n        console.log(i, \" \", j, \"石が埋まっていませんゲームを続行してください\");\n        winnerJudge = 0;\n        break winnerCheckFinish;\n      }\n    }\n  }\n  if (winnerJudge !== 0) {\n    console.log(\"石が全て\", winnerJudge, \"で埋まりました。\");\n  }\n}\n"]}