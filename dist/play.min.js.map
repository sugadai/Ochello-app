{"version":3,"sources":["play.js"],"names":["optionmsg","document","getElementById","hajime_btn","player","turnPlarer","errorMsg","textContent","getElementsByClassName","modal","game_reset_btn","playerChange","drawPeace","judgeX","judgeY","ctx","canvas2","getContext","x","a","y","r","console","log","arc","Math","PI","fillStyle","fill","i","j","c","returnStones","innerStones","judge","ia","jb","peaces","n","ia_1","jb_2","push","length","element","concat","errorMsgFun","forEach","peacePraceReturn","beginPath","b","winnerCheck","winnerJudge","blackCount","winnerJudgeCheckFinish","winnerCheckFinish","whiteCount","msg","style","resetGame","ctx2","ctx1","clearRect","width","height","drawBoard","addEventListener","display","e","layerX","layerY","turnStone"],"mappings":"aAIA,IAAAA,UAAAC,SAAAC,eAAA,aACAC,WAAAF,SAAAC,eAAA,cACIF,WAAYC,EACZE,OAAAA,SAAaF,eAASC,eAC1BE,OAAIC,YAAgB,UAGpB,IAAIC,SAAW,GAFXF,MAAMH,SAAWC,eAAR,WACbE,IAAOG,SAAPL,eAAA,YACII,KAAAA,SAAJE,uBAAA,SAAA,GACIC,eAAiBP,SAAAA,eAAT,cAGZ,SAAIQ,aAAiBT,GAIA,IAAfI,EADND,OAASO,YAAaN,WACE,IAAlBA,IACFD,OAAOG,YAAc,WA2DzB,SAASK,UAAUC,EAAQC,EAAQT,GA7CnC,IAAAU,EAAAC,QAAAC,WAAA,MAiDMC,EAAIL,EAASM,EAAI,EAJvBC,EAASR,EAAUC,EAAAA,EACjBQ,EAAA,GAAAF,EAEAG,QAAOC,IAAGP,EAAAA,IAAQC,GAClBF,EAAIG,YAKJH,EAAIS,IAAIN,EAAGE,EAAGC,EAAG,EAAG,EAAII,KAAKC,IAAI,GAJf,IAAdN,EAMFL,EAAIY,UAAY,SALD,IAARtB,IAOPU,EAAIY,UAAY,SAGlBZ,EAAIa,OALFb,SAAIY,UAAJE,EAAgBC,EAAAjB,EAASC,GAC1B,IAFDiB,EAEO,CACLhB,EAAAA,GAAIY,GACL,EAAA,EAAA,GAUC,EAAE,EAAG,GARPZ,CAAG,GAACa,GACJ,CAAA,EAAA,GACD,CAAA,GAAA,GAUG,CAAC,EAAG,GARR,CAAA,EAAA,IAWEN,QAAQC,IAAIlB,YACZ,IAAI2B,EAAe,GACfC,EAAc,GACdC,EAAQ,EACRC,EAAK,EACLC,EAAK,EACTd,QAAQC,IAAIc,OAAOR,GAAGC,IACH,IAAfzB,WAAJ6B,GAAI7B,GACF,IAASA,aADX6B,EAEO,GAEN,IAAA,IAAAI,EAAA,EAAAA,EAAA,EAAAA,IAGCF,GADAD,EAAKN,EAAIE,EAAEO,GAAG,GADhBF,EAAKN,EAAKC,EAAGO,GAAGA,GACdH,QAAMZ,IAAIY,EAAV,IAAAC,GACED,EAAOJ,GAAKK,EAAd,GAAA,EAAAD,GAAA,EAAAC,EACAd,QAAQC,IAARY,EAAgB,IAAhBC,EAAA,qBACM,GAAF,IAAAC,OAAYF,GAAZC,GAKFd,GAAQC,OAAIlB,GAAAA,KAAZ6B,EA0BGZ,QAFDC,IAAA,gBAxBFD,CACAA,QAAQC,IAARY,EAAA,IAAAC,EAAA,aACA,IAAAG,EAAAJ,EAJKK,EAKIH,EACTf,EAAAA,CAKEA,GAJFW,EAAAQ,KAAA,CAAAN,EAAAC,IACAd,QAAQC,IAARY,EAAA,IAAAC,GACAG,GAAGR,EAAAO,GAAA,GACDL,GAAAA,EAAAA,GAAYQ,GACZnB,EAAA,GAAgBkB,EAAhB,GAAA,EAAAD,GAAA,EAAAC,EAAA,CAEAD,EAAA,GACAC,MACAL,EAAII,EACFN,EAAAA,QACAI,OAAAF,GAAAC,KAAAF,GACDZ,QAAAC,IAAAU,GAKoB,IAAnBI,OAAOF,GAAIC,GAJbD,EAAA,GACAE,OAAAF,GAAAC,KAAAF,GAAA,IAAAD,EAAAS,SAXFT,EAYSI,QAAA,SAAAM,GAMLX,EAAaS,KAAKE,KAEpBV,EAAc,SA9BhBX,QAAAC,IAAAlB,YAFFiB,QAGOC,IAHP,MAAAqB,OAGiBT,EAHjB,KAAAS,OAGWR,EAHX,WAyCF,GAA4B,IAAxBJ,EAAaU,OAHbpB,OAIFA,QAAQC,IAAIS,EAAaU,OAAQ,4BALhCG,YADCvC,SAAA,sBAIHN,UAAAO,YAAA,GAQDyB,EAAac,QAAQ,SAACH,GAPtBrB,QAAIU,IAAAA,EAAaU,GAAb,IAA2BC,EAAA,IACI,IAAjCrB,OAAAqB,EAAYX,IAAAA,EAAZ,KACA1B,QAAQiB,IAAGc,QACXQ,OAAAA,EAAYvC,IAAZqC,EAAA,KAAA,EACArB,QAAAC,IACDoB,EAAA,GASK,IARN3C,EAAUO,GACVyB,IACEV,OAAAqB,EAAmB,IAAnBA,EAA6BA,OACa,IAA/BA,OAAOA,EAAKA,IAAOA,EAA1B,MACFrB,QAAQC,IAAIc,OAAZM,EAAA,IAAAA,EAAA,KACAN,QAAOM,IACPrB,EAAQC,GAHV,IAWED,EAAQC,GACRD,IAOAe,OAAOM,EAAD,IAAaA,EAAnB,KArBJN,OAAAM,EAAA,IAAAA,EAAA,IAAA,KAyBE,IAAAN,WADFA,OAEOR,GAAIxB,GAAAA,GACT,IAAAA,aACDgC,OAAAR,GAAAC,IAAA,GACDR,QAAQC,IAAIc,QACZzB,UAAUC,EAAQC,EAAQT,YAE1BM,aADAN,WAAa6B,GAEbZ,QAAQC,IAAI,KAAMlB,WAAY,SAC9B0C,iBAAiBf,GACjBV,QAAQC,IAAIlB,YAGb2B,EAAA,GAGCV,SAAOyB,iBAAPf,GAEAA,QAAAA,IAAYK,QAQVL,EAAUc,QAAOH,SAAAA,GACjBrB,QAAIR,IACJ6B,EAAU3B,GACV,IAPE2B,EAAQ,GAQV,IANEN,OAAOM,EAAQ,IAAIA,EAAQ,KAQ7B,IAAA9B,EAAAM,EAAAwB,EAAA,GALI7B,EAASK,EAAIwB,EAAQ,GAMrBK,EAAAA,QAAa/B,WAAA,MAJbC,EAAIL,EAASM,EAAI,EAKjBK,EAAIN,EAAS+B,EAAG,EAHhB5B,EAAQ,GAAJF,EAKNJ,EAAAA,YACDA,EAFDS,IAEON,EAAImB,EAAAA,EAAM,EAACM,EAAAA,KAAPjB,IAAmBiB,GAC5B,IAAA5B,OAAIY,EAAY,IAAAgB,EAAhB,IACD5B,EAAAY,UAAA,SAF8C,IAApCU,OAAOM,EAAQ,IAAIA,EAAQ,MAGtC5B,EAAIa,UAAQ,SACZsB,EAAAA,OAvBFA,gBA8BA,SAAIC,cAEJ,IAAIC,EAAJ,EAEEC,EAAA,IAAA,IAA4BxB,EAAA,EAAAA,EAAA,EAAAA,IAC1B,IAAA,IAAIQ,EAAOR,EAAGC,EAAV,EAAiBA,IAAG,CACtBqB,GAAA,IAAAA,OAAAA,GAAWrB,GAAX,CACAqB,EAAME,EAFR,MAGOA,EACLF,IAAA,IAAAA,OAAAtB,GAAAC,GAAA,CACAqB,GAAME,EACP,MAAAA,GAGLC,EAAmB,IAAK,IAAIzB,EAAC,EAAVA,EAAiB,EAAjBA,IACjB,IAAK,IAAIC,EAAC,EAAVA,EAAiB,EAAjBA,IACE,GAAIO,OAAOR,GAAPC,KAAAqB,GAAgC,IAAhCd,OAAgCA,GAAOR,GAAP,CAClCP,QAAQC,IAAIM,EAAZ,IAAAC,EAAA,0BACAqB,EAAc,EACd,MAAMG,EAIZ,GAAoB,IAAhBH,EAAJ7B,QAAI6B,IAAAA,OAAJA,EAAuB,iBAAvB,IAEO,IAAAtB,EAAA,EAAAA,EAAA,EAAAA,IACL,IAAK,IAAIA,EAAI,EAAGA,EAAC,EAAjBC,IACmB,IAAZO,OAAKR,GAAVC,GACEsB,GACY,IAAVA,OAAUvB,GAAAC,IADZyB,EAUR,SAASV,YAAYW,GAArBxD,UAAS6C,YAAiBW,EACxBxD,UAAUO,MAAAA,MAAciD,MACxBxD,SAAUyD,GAEX,SAAAC,YAECpC,QAAQC,IAAI,QAAZD,aADFjB,WAASqD,GAEPrD,IAAAA,IAAAA,EAAa,EAAbwB,EAAA,EAAAA,IACAlB,IAAAA,IAAAA,EAAaN,EAAAA,EAAAA,EAAbyB,IAGIO,OAAOR,GAAGC,GAAK,EAAfO,IAAAA,EAAOR,QAAQZ,WAAf,MACD0C,EAAA3C,QAAAC,WAAA,MACF2C,EAAAC,UAAA,EAAA,EAAAC,MAAAC,QAIDJ,EAAKE,UAAU,EAAG,EAAGC,MAAOC,QAH5BC,YAnRD7D,WAAA8D,iBAAA,QAAA,WAGCxD,MAAMgD,MAAMS,QAAU,UAAtBzD,eAAYyD,iBAAZ,QAAA,WADFR,YAGAhD,MAAAA,MAAcwD,QAACD,SAGdjD,QAHDiD,iBAAA,QAAA,SAAAE,GAKAnD,QAAQiD,IAAAA,YAEN,IADA3C,IAAAA,GAAYjB,EACHwB,EAAG,EAAAA,EAAZ,EAAAA,IAAA,CAEEP,QAAQC,IAAR,KAAAqB,OAAiBf,IADnB,IAAK,IAAKC,EAAV,EAAiBA,EAAjB,EAAwBA,IAAI,CAC1BR,IAAAA,EAAAH,EAAAW,EAGMhB,EAASK,EAAIU,EAAjB,GAFFP,QAAUC,IAAV,KAAAqB,OAAiBd,IAEXhB,EAASK,EAACiD,QAAdvD,EAAAM,EAAAgD,EAAAC,SACA9C,QAAQC,IAARD,MAAAA,OAAA6C,EAAAC,OAAA9C,iBAIMR,EAASqD,EAAEE,QAAUvD,EAASmC,EAAIkB,EAAEE,QAAQ,CADhD/C,GADET,QAAMU,IAANV,MAAAA,OAAAsD,EAAAE,OAAAxD,iBACF,IAAAS,OAAAO,GAAAC,GAOI,OAHAR,QAAQC,IAAR,UAAAqB,OAAsBf,EAAtB,KAAAe,OAA2Bd,EAA3B,qBAFFR,YADER,SAAM,oBAGNQ,QAAAA,IAAQC,EAAR,IAAAT,GACAR,GAAAA,EACAuC,QAAAA,IAAAA,EAAYvC,WAAZO,EAAAM,GACAG,QAAAC,IAAAT,EAAA,WAAAA,EAAAmC,GAOFqB,UAAAzC,EAAAC,EAAAjB,EAAAC,IAYH,GA3BDoB,EA2BO","file":"play.min.js","sourcesContent":["// import canvas1 from \"./script/canvas1\";\n// import canvas2 from \"./script/canvas2\";\n// const canvas1 = document.getElementById(\"canvas1\");\n// const canvas2 = document.getElementById(\"canvas2\");\n// let { width, height } = canvas1; // canvasのwidthとheightを取得\n// let a = width / 8; // 1マスの一辺の長さ\nlet optionmsg = document.getElementById(\"error-msg\");\nlet hajime_btn = document.getElementById(\"hajime_btn\");\nlet turnPlarer = 1; //出番の初期化（黒の番から始まる）\nlet player = document.getElementById(\"turn-player\");\nplayer.textContent = \"黒のターンです\";\nlet errorMsg = \"\";\nlet modal = document.getElementById(\"myModal\");\nlet btn = document.getElementById(\"modalBtn\");\nlet span = document.getElementsByClassName(\"close\")[0];\nlet game_reset_btn = document.getElementById(\"game_reset\");\n// console.log(optionmsg);\n\nfunction playerChange(turnPlarer) {\n  if (turnPlarer === 1) {\n    player.textContent = \"黒のターンです\";\n  } else if (turnPlarer === -1) {\n    player.textContent = \"白のターンです\";\n  }\n}\n\nhajime_btn.addEventListener(\"click\", function () {\n  modal.style.display = \"block\";\n});\ngame_reset_btn.addEventListener(\"click\", function () {\n  resetGame();\n  modal.style.display = \"none\";\n});\n\ncanvas2.addEventListener(\"click\", function (e) {\n  console.log(turnPlarer);\n  let judge = false;\n  for (let i = 0; i < 8; i++) {\n    console.log(`iは${i}`);\n    for (let j = 0; j < 8; j++) {\n      let judgeX = a * j;\n      let judgeY = a * i;\n      console.log(`jは${j}`);\n\n      if (judgeX < e.layerX && judgeX + a > e.layerX) {\n        console.log(`X軸は${e.layerX}の位置をクリックしました`);\n        if (judgeY < e.layerY && judgeY + b > e.layerY) {\n          console.log(`Y軸は${e.layerY}の位置をクリックしました`);\n          if (peaces[i][j] !== 0) {\n            console.log(`クリック位置[${i},${j}]には既に石があります`);\n            errorMsg = `クリック位置には既に石があります`;\n            errorMsgFun(errorMsg);\n            return;\n          }\n          console.log(judgeX, \" \", judgeY);\n          judge = true;\n          console.log(judgeX, \"< おいた石 <\", judgeX + a);\n          console.log(judgeY, \"< おいた石 <\", judgeY + b);\n          // console.log(`${judgeX} ${judgeY}`);\n          // if (turnPlarer === 1) {\n          //   peaces[i][j] = 1;\n          // } else if (turnPlarer === -1) {\n          //   peaces[i][j] = -1;\n          // }\n          turnStone(i, j, judgeX, judgeY);\n          // console.log(peaces);\n          // console.log(turnPlarer);\n          // drawPeace(judgeX, judgeY, i, j, turnPlarer);\n\n          // break;\n        }\n      } else {\n        continue;\n      }\n    }\n    if (judge) break;\n  }\n});\n\nfunction drawPeace(judgeX, judgeY, turnPlarer) {\n  // console.log(i, j);\n\n  let ctx = canvas2.getContext(\"2d\");\n  let x = judgeX + a / 2; //X軸\n  let y = judgeY + b / 2; //Y軸\n  let r = a * 0.4; // 半径\n  console.log(x, \" \", y);\n  ctx.beginPath(); // パスのリセット\n  ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n  if (turnPlarer === 1) {\n    ctx.fillStyle = \"black\"; // 塗る色を黒に\n  } else if (turnPlarer === -1) {\n    ctx.fillStyle = \"white\"; // 塗る色を白に\n  }\n\n  ctx.fill(); // 塗る\n  // turnStone(i, j);\n}\n\nfunction turnStone(i, j, judgeX, judgeY) {\n  let c = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n  console.log(turnPlarer);\n  let returnStones = [];\n  let innerStones = [];\n  let judge = 0;\n  let ia = 0;\n  let jb = 0;\n  console.log(peaces[i][j]);\n  if (turnPlarer === 1) {\n    judge = -1;\n  } else if (turnPlarer === -1) {\n    judge = 1;\n  }\n  for (let n = 0; n < 8; n++) {\n    ia = i + c[n][0];\n    jb = j + c[n][1];\n    console.log(ia, \" \", jb);\n    if (ia < 0 || jb < 0 || ia > 7 || jb > 7) {\n      console.log(ia, \" \", jb, \" この座標はありません。\");\n      continue;\n    } else if (peaces[ia][jb] === 0) {\n      // peacePraceReturn(c[0]);\n      console.log(turnPlarer);\n      console.log(`座標[${ia},${jb}]は空です。`);\n      continue;\n    } else if (peaces[ia][jb] === judge) {\n      console.log(ia, \" \", jb, \"石の色が違います。\");\n      let ia_1 = ia;\n      let jb_2 = jb;\n      do {\n        innerStones.push([ia, jb]);\n        console.log(ia, \" \", jb);\n\n        ia_1 += c[n][0];\n        jb_2 += c[n][1];\n        if (ia_1 < 0 || jb_2 < 0 || ia_1 > 7 || jb_2 > 7) {\n          innerStones = [];\n          break;\n        }\n        ia = ia_1;\n        jb = jb_2;\n      } while (peaces[ia][jb] === judge);\n      console.log(innerStones);\n      if (peaces[ia][jb] === 0) {\n        innerStones = [];\n      } else if (peaces[ia][jb] !== judge && innerStones.length !== 0) {\n        innerStones.forEach((element) => {\n          returnStones.push(element);\n        });\n        innerStones = [];\n      }\n      // returnStones = [];\n\n      continue;\n    } else {\n      console.log(\"石色が同じです。\");\n    }\n  }\n  if (returnStones.length === 0) {\n    console.log(returnStones.length, \"そこに石を置いても返せる石がありません\");\n    errorMsg = \"そこ石を置いても返せる石がありません\";\n    errorMsgFun(errorMsg);\n    return;\n  }\n  optionmsg.textContent = \"\";\n  returnStones.forEach((element) => {\n    console.log(element[0], \" \", element[1]);\n    if (peaces[element[0]][element[1]] === 1) {\n      console.log(peaces);\n      peaces[element[0]][element[1]] = -1;\n      console.log(\n        element[0],\n        \" \",\n        element[1],\n        \" \",\n        peaces[element[0]][element[1]]\n      );\n    } else if (peaces[element[0]][element[1]] === -1) {\n      console.log(peaces[element[0]][element[1]]);\n      console.log(\n        element[0],\n        \" \",\n        element[1],\n        \" \",\n        peaces[element[0]][element[1]]\n      );\n      peaces[element[0]][element[1]] = 1;\n    }\n  });\n  if (turnPlarer === 1) {\n    peaces[i][j] = 1;\n  } else if (turnPlarer === -1) {\n    peaces[i][j] = -1;\n  }\n  console.log(peaces);\n  drawPeace(judgeX, judgeY, turnPlarer);\n  turnPlarer = judge;\n  playerChange(turnPlarer);\n  console.log(\"次は\", turnPlarer, \"の番です。\");\n  peacePraceReturn(returnStones);\n  console.log(turnPlarer);\n\n  returnStones = [];\n}\n\nfunction peacePraceReturn(returnStones) {\n  console.log(peaces);\n\n  returnStones.forEach((element) => {\n    console.log(\n      element[0],\n      \" \",\n      element[1],\n      \" \",\n      peaces[element[0]][element[1]]\n    );\n    let judgeX = a * element[1];\n    let judgeY = a * element[0];\n    let ctx = canvas2.getContext(\"2d\");\n    let x = judgeX + a / 2; //X軸\n    let y = judgeY + b / 2; //Y軸\n    let r = a * 0.4; // 半径\n    // console.log(x, \" \", y);\n    ctx.beginPath(); // パスのリセット\n    ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n    if (peaces[element[0]][element[1]] === 1) {\n      ctx.fillStyle = \"black\"; // 塗る色を黒に\n    } else if (peaces[element[0]][element[1]] === -1) {\n      ctx.fillStyle = \"white\";\n    }\n    ctx.fill(); // 塗る\n    winnerCheck();\n    // turnStone(element[0], element[1]);\n  });\n}\n\nfunction winnerCheck() {\n  // console.log(turnPlarer);\n  let winnerJudge = 0;\n  let whiteCount = 0;\n  let blackCount = 0;\n  winnerJudgeCheckFinish: for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (peaces[i][j] === 1) {\n        winnerJudge = 1;\n        break winnerJudgeCheckFinish;\n      } else if (peaces[i][j] === -1) {\n        winnerJudge = -1;\n        break winnerJudgeCheckFinish;\n      }\n    }\n  }\n  winnerCheckFinish: for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (peaces[i][j] !== winnerJudge && peaces[i][j] !== 0) {\n        console.log(i, \" \", j, \"石が埋まっていませんゲームを続行してください\");\n        winnerJudge = 0;\n        break winnerCheckFinish;\n      }\n    }\n  }\n  if (winnerJudge !== 0) {\n    console.log(\"石が全て\", winnerJudge, \"で埋まりました。\");\n  } else {\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (peaces[i][j] === 1) {\n          blackCount++;\n        } else if (peaces[i][j] === -1) {\n          whiteCount++;\n        }\n      }\n    }\n  }\n}\n\nfunction errorMsgFun(msg) {\n  optionmsg.textContent = msg;\n  optionmsg.style.color = \"red\";\n  errorMsg = \"\";\n}\nfunction resetGame() {\n  console.log(\"gfas\");\n  turnPlarer = 1;\n  playerChange(turnPlarer);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      peaces[i][j] = 0;\n    }\n  }\n  let ctx1 = canvas1.getContext(\"2d\");\n  let ctx2 = canvas2.getContext(\"2d\");\n  ctx1.clearRect(0, 0, width, height);\n  ctx2.clearRect(0, 0, width, height);\n  drawBoard();\n}\n"]}