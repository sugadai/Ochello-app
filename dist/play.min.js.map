{"version":3,"sources":["play.js"],"names":["judge","judgeX","judgeY","i","j","ctx","canvas2","getContext","x","drawPeace","y","b","a","console","beginPath","r","Math","PI","fillStyle","turnStone","fill","ia","jb","peaces","n","c","log","concat","returnStones","push","peacePraceReturn","addEventListener","e","layerY","layerX"],"mappings":"aAmCI,SAAIA,UAAOC,EAAAC,EAAAC,EAAAC,GAOb,IAAIC,EAAMC,QAAQC,WAAW,MAH/BC,EAASC,EAAUR,EAAAA,EACjBS,EAAAR,EAAAS,EAAA,EAEIN,EAAMC,GAAHM,EACPC,QAAQZ,IAAAA,EAAM,IAAIS,GAIlBL,EAAIS,YAHJT,EAAIK,IAAIR,EAAAA,EAAMa,EAAGJ,EAAC,EAAMK,KAAAC,IAAA,GAKxBZ,EAAIa,UAAY,QAJhBb,EAAIU,OAMJI,UAAUhB,EAAGC,GAGf,SAASe,UAAUhB,EAAGC,GALpBC,IAAIa,EAAAA,CAQF,EAAE,GAAI,GAPRb,EAAIe,EAAAA,GASF,EAAE,EAAG,GARPD,CAAAA,GAAAA,GACD,CAAA,EAAA,GAUG,CAAC,GAAI,GART,CAAA,EAAA,GACE,CAAA,EAAA,IAaInB,EAAJ,GACIqB,EAAJ,EACIC,EAAK,EAALA,EAAK,EACY,IAAjBC,OAAOpB,GAAGC,GACZJ,GAAS,GACkB,IAAlBuB,OAAOpB,GAAGC,KACnBJ,EAAQ,GAEV,IAAK,IAAIwB,EAAI,EAAGA,EAAI,EAAGA,IAGrBX,GAHFQ,EAAKlB,EAAKsB,EAAGD,GAAGA,GACdH,EAAKlB,EAAIsB,EAAED,GAAG,GACdF,QAAMI,IAAIL,EAAV,IAAAC,GACA,IAAAT,OAAAQ,GAAAC,GACAT,QAAUa,IAAV,MAAAC,OAAIN,EAAJ,KAAAM,OAA0BL,EAA1B,eACE,CAAA,GAAAC,OAAAF,GAAAC,KAAAtB,EAAA,CAGAa,IAFAA,QAAQa,IAARD,EAAAD,GAAA,GAAAC,EAAAD,GAAA,GAAA,aAKEI,EAAaC,KAAK,CAACR,EAAIC,IADzBD,GAAGI,EAAAD,GAAA,GACDI,GAAAA,EAAAA,GAAAA,GACAP,QAAQG,IAAFH,EAANC,GAEOC,OAAPF,GAAAC,KACAtB,IAGFa,QAAQa,IAAIE,GAAZf,SAXKA,QAaAa,IAAA,aAMX,SAASI,iBAAiBL,GAA1BZ,QAASiB,IAAAA,GAjGTxB,QAAAyB,iBAAA,QAAA,SAAAC,GAEA1B,QAAQyB,IAAAA,EAAAA,OAAiB,IAAAC,EAAzBC,QAEE,IADApB,IAAAA,GAAYmB,EACH7B,EAAG,EAAAA,EAAZ,EAAAA,IAAA,CAEEU,QAAQa,IAAR,KAAAC,OAAiBxB,IADnB,IAAK,IAAKC,EAAV,EAAiBA,EAAjB,EAAwBA,IAAI,CAC1BS,IAAAA,EAAAD,EAAAR,EAGMF,EAASU,EAAIT,EAAjB,GAFFU,QAAUa,IAAV,KAAAC,OAAiBvB,IAEXF,EAASU,EAACsB,QAAdjC,EAAAW,EAAAoB,EAAAE,SACArB,QAAQa,IAARb,MAAAA,OAAAmB,EAAAE,OAAArB,iBAIMX,EAAS8B,EAAEC,QAAU/B,EAASS,EAAIqB,EAAEC,QAAQ,CAF9ChC,QAAMyB,IAANzB,MAAAA,OAAA+B,EAAAC,OAAAhC,iBACFY,GAAQa,EAINb,QAAQa,IAAIzB,EAAQ,WAAYA,EAASW,GAH3CC,QAAUa,IAAIxB,EAAV,WAA8BS,EAAMsB,GAEtCjC,OAAKG,GAAGC,GAAR,EACAS,QAAQa,IAAIzB,QACZY,UAAQa,EAARxB,EAAoBC,EAAAC,GAEpBmB,OAOF,GAAAvB,EAAA","file":"play.min.js","sourcesContent":["// import canvas1 from \"./script/canvas1\";\n// import canvas2 from \"./script/canvas2\";\n// const canvas1 = document.getElementById(\"canvas1\");\n// const canvas2 = document.getElementById(\"canvas2\");\n// let { width, height } = canvas1; // canvasのwidthとheightを取得\n// let a = width / 8; // 1マスの一辺の長さ\n\ncanvas2.addEventListener(\"click\", function (e) {\n  console.log(e.layerX + \" \", e.layerY);\n  let judge = false;\n  for (let i = 0; i < 8; i++) {\n    console.log(`iは${i}`);\n    for (let j = 0; j < 8; j++) {\n      let judgeX = a * j;\n      let judgeY = a * i;\n      console.log(`jは${j}`);\n\n      if (judgeX < e.layerX && judgeX + a > e.layerX) {\n        console.log(`X軸は${e.layerX}の位置をクリックしました`);\n        if (judgeY < e.layerY && judgeY + b > e.layerY) {\n          console.log(`Y軸は${e.layerY}の位置をクリックしました`);\n          judge = true;\n          console.log(judgeX, \"< おいた石 <\", judgeX + a);\n          console.log(judgeY, \"< おいた石 <\", judgeY + b);\n          // console.log(`${judgeX} ${judgeY}`);\n          peaces[i][j] = 1;\n          console.log(peaces);\n          drawPeace(judgeX, judgeY, i, j);\n\n          break;\n        }\n      } else {\n        continue;\n      }\n    }\n    if (judge) break;\n  }\n});\n\nfunction drawPeace(judgeX, judgeY, i, j) {\n  // console.log(i, j);\n\n  let ctx = canvas2.getContext(\"2d\");\n  let x = judgeX + a / 2; //X軸\n  let y = judgeY + b / 2; //Y軸\n  let r = a * 0.4; // 半径\n  console.log(x, \" \", y);\n  ctx.beginPath(); // パスのリセット\n  ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n  ctx.fillStyle = \"black\"; // 塗る色を黒に\n  ctx.fill(); // 塗る\n  turnStone(i, j);\n}\n\nfunction turnStone(i, j) {\n  // console.log(i, j);\n  let c = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n\n  let returnStones = [];\n  let judge = 0;\n  let ia = 0;\n  let jb = 0;\n  if (peaces[i][j] === 1) {\n    judge = -1;\n  } else if (peaces[i][j] === -1) {\n    judge = 1;\n  }\n  for (let n = 0; n < 8; n++) {\n    ia = i + c[n][0];\n    jb = j + c[n][1];\n    console.log(ia, \" \", jb);\n    if (peaces[ia][jb] === 0) {\n      // peacePraceReturn(c[0]);\n      console.log(`座標[${ia},${jb}]は空です。`);\n    } else if (peaces[ia][jb] === judge) {\n      console.log(c[n][0], c[n][1], \"石の色が違います。\");\n\n      do {\n        returnStones.push([ia, jb]);\n        ia += c[n][0];\n        jb += c[n][1];\n        console.log(ia, jb);\n        // if (peaces[ia][jb] === 0) d = \"\";\n      } while (peaces[ia][jb] === judge);\n\n      console.log(returnStones);\n      continue;\n    } else {\n      console.log(\"石色が同じです。\");\n    }\n  }\n}\n\nfunction peacePraceReturn(c) {\n  console.log(c);\n}\n"]}